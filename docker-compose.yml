# version: "3.8"

services:
  neo4j:
    image: neo4j:latest
    ports:
      - "${NEO4J_WEB_UI}:7474"
      - "${NEO4J_BOLT}:7687"
    environment:
      ADMIN_PASSWORD: ${NEO4J_ADMIN_PASSWORD}
      LLM_APP_USER_LOGIN: ${NEO4J_LOGIN}
      LLM_APP_USER_PASSWORD: ${NEO4J_PASSWORD}
      LLM_APP_DATABASE: ${NEO4J_DB}
      NEO4J_AUTH: "neo4j/${NEO4J_ADMIN_PASSWORD}"
    networks:
      - internal_only
    stop_grace_period: 2s
    volumes:
      - ./data_volumes/neo4j/data:/data
      - ./data_volumes/neo4j/logs:/logs
      - ./data_volumes/neo4j/import:/import
      - ./data_volumes/neo4j/plugins:/plugins
      - ./data_volumes/neo4j-init.sh:/docker-entrypoint-initdb.d/init.sh
    # entrypoint: [ "bash", "-c", "ls -l /docker-entrypoint-initdb.d"]
    entrypoint: [ "bash", "-c", "/docker-entrypoint-initdb.d/init.sh && exec /startup/docker-entrypoint.sh neo4j" ]

  app:
    build:
      context: .
      dockerfile: llm_toolkit/Dockerfile
    environment:
      - BACKEND_PORT=${BACKEND_PORT}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LLM_PROXY_URI=${LLM_PROXY_URI}
    networks:
      - internal_only
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    volumes:
      - ./:/app
    stop_grace_period: 2s
    extra_hosts:
      - "host.docker.internal:host-gateway"

  react:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    depends_on:
      - app
    networks:
      - internal_only
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    volumes:
      - ./frontend/llm_toolkit_UI:/app
      - /app/node_modules
    environment:
      - BACKEND_URI=http://localhost:${BACKEND_PORT}/api
      - FRONTEND_PORT=${FRONTEND_PORT}
    working_dir: /app
    stop_grace_period: 2s

networks:
  internal_only:
    driver: bridge
